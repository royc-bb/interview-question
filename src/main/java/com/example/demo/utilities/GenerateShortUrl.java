package com.example.demo.utilities;

import org.apache.commons.lang3.RandomStringUtils;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

/**
 * Utility class to generate a short value to represent the full length URL.
 * 
 * <p>
 * Using generate() will provide a random string of alphanumeric characters based on the defined
 * length parameters.
 * 
 * <p>
 * TODO Provide for additional generating strategies
 * 
 * @author Roy Cunningham
 *
 */
@Service
public class GenerateShortUrl {

  /**
   * Static fields can't be directly autowired by Spring so the workaround is to pass the values
   * into setter methods. These cannot be generated by Lombok, so are manually defined.
   */
  private static int minShortUrlLength;
  private static int maxShortUrlLength;

  @Value("${app.min-shorturl-length}")
  public void setMinShortUrlLength(int minShortUrlLength) {
    GenerateShortUrl.minShortUrlLength = minShortUrlLength;
  }

  @Value("${app.max-shorturl-length}")
  public void setMaxShortUrlLength(int maxShortUrlLength) {
    GenerateShortUrl.maxShortUrlLength = maxShortUrlLength;
  }

  /**
   * @return <b>String</b> Random alphanumeric string of length specified in application properties
   */
  public static String generate() {
    return RandomStringUtils.randomAlphanumeric(minShortUrlLength, maxShortUrlLength);
  }

}
